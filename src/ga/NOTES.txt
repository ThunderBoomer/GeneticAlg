1)
	THE CORRECT ASSIGNMENT OF AN ARRAY LIST TO A DECLARED ARRAY LIST VARIABLE -
		I just put an example of how Coupling will have to be changed when you set the global variable
		currentPopulation equal to the ArrayList that I send through setChroms
		
		No 'new' is needed, then you set the ArrayList variable directly equal to the incoming list.
		
		-Corey

2)
        CODE HAS FEELINGS AS WELL -
                As the title states, the morale of a single line of code could dictate the outcome of the RUN.
                This quote: "so getChroms wouldn't feel left out" has proved to me that you not only know of
                this fact but also actively use it within programming. 
                
                Keep up the good work!
                
                -Russell
                
                P.S. I will post something that possesses a more ligitimate value asap.

3)
	CHOOSING PARENTS DOES NOT IMPELEMENT ROULETTE WHEEL AS OF YET -
		Class: Coupling
		Method: private void chooseParents()
		Until correct "fitness" values are given, this method chooses two parents randomly.
		Also, each chromosome has no "weight" greater than any other chromosome.

4)
	CLASS COUPLING MAY NEED TO BE PASSED VARIABLES FROM CLASS GAPARAMS -
		Class: Coupling
		Variables:
			final static double CROSSOVER_PROB
			final static double MUTATION_PROB

		Both are needed to check if crossover (coupling), mutation, or cloning occur.		
		However, not all variables are needed.
		MAX_CHROMS and MAX_GENES can be obtained through other means.
		The other variables are irrelevant to the needs of the Coupling class.
		
		
		**********
		>>>> add "implements GAparams" immediately after the class name in the declaration - 
		>>>> (as is done with the Action class)
		>>>> this will allow you to access variables in GAparams directly
		>>>> - Corey
		**********
		
		
5)
	FITNESS VALUES WORK, THEORETICAL CHANGE TO ARRAY LIST STRUCTURE
	Class: Action
	
	I'm not actually currently using chromsFromCoupling, instead just updating chromsToCoupling
	after sending them. This may/may not work, I can't remember if we needed the old generation for
	anything
	
	As it stands, I believe I'm done with Action unless I've overlooked anything that needs to happen.
	
	It updates fitness values based on all the crazy I2F/STM silliness and sends you the current gen
	
	2 things: 1) chroms 'error'(fitnessvalue) is now a double, to take care of case answer was wrong.
			  
			  2) The placement of the call for i2f's generate test case is placed right now within
			     the main do/while loop of class 'ACTION' this generates a new test case for every gen.
			  
			  	 If this is wrong, comment out block (2) of "I DON'T KNOW WHERE THIS GOES", and
			  	 uncomment (1). This will create one test case for entire program run.
			  	 
			  	 Will check later
			 
